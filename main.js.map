{"version":3,"sources":["webpack://mesto_sprint_8/./src/components/Card.js","webpack://mesto_sprint_8/./src/components/FormValidator.js","webpack://mesto_sprint_8/./src/components/UserInfo.js","webpack://mesto_sprint_8/./src/components/Section.js","webpack://mesto_sprint_8/./src/components/Popup.js","webpack://mesto_sprint_8/./src/components/PopupWithImage.js","webpack://mesto_sprint_8/./src/components/PopupWithForm.js","webpack://mesto_sprint_8/./src/components/PopupWithConfirm.js","webpack://mesto_sprint_8/./src/components/Api.js","webpack://mesto_sprint_8/./src/utils/constants.js","webpack://mesto_sprint_8/./src/pages/index.js"],"names":["cardTemplate","cardData","userData","handleCardClick","handleLikeClick","handleDeleteClick","this","_cardTemplateNode","_data","_userData","_handleCardClick","_handleLikeClick","_handleDeleteClick","cloneNode","querySelector","_element","_getCardTemplate","_cardElementImage","_cardDeleteIcon","_cardLikeIcon","_likeCounter","_setDeleteIcon","updateLikeCount","_setEventListeners","src","link","alt","name","textContent","likes","some","like","_id","res","length","_toggleLikeIcon","isLiked","classList","add","remove","owner","addEventListener","config","formElement","_formElement","_config","inputElement","_errorElement","errorSelector","inputErrorClass","validationMessage","errorClass","_inputList","validity","valid","_hideInputError","_showInputError","_buttonElement","disabled","_hasInvalidInput","Array","from","querySelectorAll","inputSelector","submitButtonSelector","_toggleButtonState","forEach","_checkInputValidity","event","preventDefault","_deactivateButton","userNameInputElement","userDescriptionInputElement","userNameElement","userDescriptionElement","userAvatarElement","id","_userNameInputElement","_userDescriptionInputElement","_userNameElement","_userDescriptionElement","_userAvatarElement","about","avatar","containerSelector","items","renderer","_renderedItems","_renderer","_containerElement","document","item","element","append","prepend","popupSelector","_popup","_handleEscClose","bind","_closePopupOnOverlay","removeEventListener","key","close","target","currentTarget","handleCloseButtonClick","handleOverlayClose","_imgTitleLoad","_imgPictureLoad","Popup","handleFormSubmit","_handleFormSubmit","_inputElements","_popupFormButton","popupFormElement","formValues","input","value","_getInputValues","reset","_deleteElement","elementWithId","api","login","_server","server","_auth","auth","_cohort","cohort","_path","fetch","method","headers","authorization","then","ok","json","Promise","reject","status","data","body","JSON","stringify","description","cardId","initValidationConfig","formSelector","profileNameInputElement","profileDescriptionInputElement","profileEditButtonElement","cardAddButtonElement","profileNameElement","profileDescriptionElement","profileAvatarElement","profileAvatarOverlayElement","content","profilePopupSelector","cardPopupSelector","updateAvatarPopupSelector","cardPopupWithImage","PopupWithImage","cardImageClick","cardModel","open","createCardInstance","card","Card","catch","err","console","error","cardElement","deleteCardPopupWithConfirm","initialCardsSection","Section","createCardElement","appendItem","promises","getInitialCards","getUserInfo","renderLoading","popup","isLoading","all","resCard","resUser","profileUserInfo","setUserInfo","setResolvedItems","addItems","editProfilePopupWithForm","addCardPopupWithForm","updateAvatarPopupWithForm","UserInfo","PopupWithConfirm","PopupWithForm","profileData","finally","newCard","prependItem","log","editProfileFormValidator","FormValidator","addCardFormValidator","editAvatarFormValidator","enableValidation","setEventListeners"],"mappings":"yLA0FA,Q,WAzFE,aAMGA,GAAc,IALfC,EAKe,EALfA,SACAC,EAIe,EAJfA,SACAC,EAGe,EAHfA,gBACAC,EAEe,EAFfA,gBACAC,EACe,EADfA,mB,4FACe,SACfC,KAAKC,kBAAoBP,EACzBM,KAAKE,MAAQP,EACbK,KAAKG,UAAYP,EACjBI,KAAKI,iBAAmBP,EACxBG,KAAKK,iBAAmBP,EACxBE,KAAKM,mBAAqBP,E,gEAQ1B,OAJoBC,KAAKC,kBACtBM,WAAU,GACVC,cAAc,c,0CAoBjB,OAdAR,KAAKS,SAAWT,KAAKU,mBACrBV,KAAKW,kBAAoBX,KAAKS,SAASD,cAAc,mBACrDR,KAAKY,gBAAkBZ,KAAKS,SAASD,cAAc,wBACnDR,KAAKa,cAAgBb,KAAKS,SAASD,cAAc,uBACjDR,KAAKc,aAAed,KAAKS,SAASD,cAAc,wBAEhDR,KAAKe,iBACLf,KAAKgB,gBAAgBhB,KAAKE,OAC1BF,KAAKiB,qBAELjB,KAAKW,kBAAkBO,IAAMlB,KAAKE,MAAMiB,KACxCnB,KAAKW,kBAAkBS,IAAMpB,KAAKE,MAAMmB,KACxCrB,KAAKS,SAASD,cAAc,mBAAmBc,YAActB,KAAKE,MAAMmB,KAEjErB,KAAKS,W,gCAGJ,WAER,OAAOT,KAAKE,MAAMqB,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQ,EAAKvB,UAAUuB,S,sCAGnDC,GAEd3B,KAAKE,MAAQyB,EACf3B,KAAKc,aAAaQ,YAAcK,EAAIJ,MAAMK,OAEtC5B,KAAK6B,oB,wCAOH7B,KAAK8B,UACP9B,KAAKa,cAAckB,UAAUC,IAAI,6BAEjChC,KAAKa,cAAckB,UAAUE,OAAO,+B,oCAKtCjC,KAAKS,SAASwB,SACdjC,KAAKS,SAAW,O,uCAIZT,KAAKG,UAAUuB,MAAQ1B,KAAKE,MAAMgC,MAAMR,KAC1C1B,KAAKY,gBAAgBqB,W,2CAIJ,WACnBjC,KAAKa,cAAcsB,iBAAiB,SAAS,WAC3C,EAAK9B,iBAAiB,EAAKH,MAAMwB,QAEnC1B,KAAKY,gBAAgBuB,iBAAiB,SAAS,WAC7C,EAAK7B,mBAAmB,EAAKG,SAAU,EAAKP,MAAMwB,QAEpD1B,KAAKW,kBAAkBwB,iBAAiB,SAAS,WAC/C,EAAK/B,iBAAiB,EAAKF,e,4LCnBjC,Q,WAjEE,WAAYkC,EAAQC,I,4FAAa,SAC/BrC,KAAKsC,aAAeD,EACpBrC,KAAKuC,QAAUH,E,6DAGDI,GACdxC,KAAKyC,cAAgBzC,KAAKsC,aAAa9B,cAAlB,UAAmCR,KAAKuC,QAAQG,cAAhD,YAAiEF,EAAanB,OACnGmB,EAAaT,UAAUC,IAAIhC,KAAKuC,QAAQI,iBACxC3C,KAAKyC,cAAcnB,YAAckB,EAAaI,kBAC9C5C,KAAKyC,cAAcV,UAAUC,IAAIhC,KAAKuC,QAAQM,c,sCAGhCL,GACdxC,KAAKyC,cAAgBzC,KAAKsC,aAAa9B,cAAlB,UAAmCR,KAAKuC,QAAQG,cAAhD,YAAiEF,EAAanB,OACnGmB,EAAaT,UAAUE,OAAOjC,KAAKuC,QAAQI,iBAC3C3C,KAAKyC,cAAcV,UAAUE,OAAOjC,KAAKuC,QAAQM,YACjD7C,KAAKyC,cAAcnB,YAAc,K,yCAIjC,OAAOtB,KAAK8C,WAAWtB,MAAK,SAACgB,GAC3B,OAAQA,EAAaO,SAASC,W,0CAIdR,GACbA,EAAaO,SAASC,MAGzBhD,KAAKiD,gBAAgBT,GAFrBxC,KAAKkD,gBAAgBV,K,2CAOvBxC,KAAKmD,eAAeC,SAAWpD,KAAKqD,qB,0CAIpCrD,KAAKmD,eAAepB,UAAUC,IAAI,6BAClChC,KAAKmD,eAAeC,UAAW,I,2CAGZ,WACnBpD,KAAK8C,WAAaQ,MAAMC,KAAKvD,KAAKsC,aAAakB,iBAAiBxD,KAAKuC,QAAQkB,gBAC7EzD,KAAKmD,eAAiBnD,KAAKsC,aAAa9B,cAAcR,KAAKuC,QAAQmB,sBAEnE1D,KAAK2D,qBAEL3D,KAAK8C,WAAWc,SAAQ,SAACpB,GACvBA,EAAaL,iBAAiB,SAAS,WACrC,EAAK0B,oBAAoBrB,GACzB,EAAKmB,6B,yCAKQ,WACjB3D,KAAKsC,aAAaH,iBAAiB,UAAU,SAAC2B,GAC5CA,EAAMC,iBACN,EAAKC,uBAEPhE,KAAKiB,0B,4LC1BT,Q,WAnCE,cAOG,IANDgD,EAMC,EANDA,qBACAC,EAKC,EALDA,4BACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,uBACAC,EAEC,EAFDA,kBACAC,EACC,EADDA,I,4FACC,SACDtE,KAAKuE,sBAAwBN,EAC7BjE,KAAKwE,6BAA+BN,EACpClE,KAAKyE,iBAAmBN,EACxBnE,KAAK0E,wBAA0BN,EAC/BpE,KAAK2E,mBAAqBN,EAC1BrE,KAAK0B,IAAM4C,E,2DAWX,MAPwB,CACtBjD,KAAMrB,KAAKuE,sBAAsBjD,YACjCsD,MAAO5E,KAAKwE,6BAA6BlD,YACzCuD,OAAQ7E,KAAK2E,mBAAmBzD,IAChCQ,IAAK1B,KAAK0B,O,kCAMF4C,EAAIjD,EAAMuD,EAAOC,GAC3B7E,KAAKyE,iBAAiBnD,YAAcD,EACpCrB,KAAK0E,wBAAwBpD,YAAcsD,EAC3C5E,KAAK0B,IAAM4C,EACXtE,KAAK2E,mBAAmBzD,IAAM2D,O,4LCJlC,Q,WA3BE,aAGGC,GAAmB,IAFpBC,EAEoB,EAFpBA,MACAC,EACoB,EADpBA,U,4FACoB,SACpBhF,KAAKiF,eAAiBF,EACtB/E,KAAKkF,UAAYF,EACjBhF,KAAKmF,kBAAoBC,SAAS5E,cAAcsE,G,sDAGzClF,GAAU,WACjBI,KAAKiF,eAAerB,SAAQ,SAAAyB,GAC1B,EAAKH,UAAUG,EAAMzF,Q,uCAIRmF,GACf/E,KAAKiF,eAAiBF,I,iCAGbO,GACTtF,KAAKmF,kBAAkBI,OAAOD,K,kCAGpBA,GACVtF,KAAKmF,kBAAkBK,QAAQF,Q,4LCmBnC,Q,WA3CE,WAAYG,I,4FAAe,SACzBzF,KAAK0F,OAASN,SAAS5E,cAAciF,GACrCzF,KAAK2F,gBAAkB3F,KAAK2F,gBAAgBC,KAAK5F,MACjDA,KAAK6F,qBAAuB7F,KAAK6F,qBAAqBD,KAAK5F,M,oDAI3DA,KAAK0F,OAAO3D,UAAUC,IAAI,mBAC1BoD,SAASjD,iBAAiB,UAAWnC,KAAK2F,mB,8BAI1C3F,KAAK0F,OAAO3D,UAAUE,OAAO,mBAC7BmD,SAASU,oBAAoB,UAAW9F,KAAK2F,mB,sCAG/B7B,GACI,WAAdA,EAAMiC,KACR/F,KAAKgG,U,2CAIYlC,GACfA,EAAMmC,SAAWnC,EAAMoC,eACzBlG,KAAKgG,U,0CAKPhG,KAAKmG,yBACLnG,KAAKoG,uB,+CAGkB,WACHpG,KAAK0F,OAAOlF,cAAc,iBAClC2B,iBAAiB,SAAS,kBAAM,EAAK6D,a,2CAIjDhG,KAAK0F,OAAOvD,iBAAiB,QAASnC,KAAK6F,2B,omCCtB/C,Q,kpBAfE,WAAYJ,GAAe,a,4FAAA,UACzB,cAAMA,IACDY,cAAgB,EAAKX,OAAOlF,cAAc,4BAC/C,EAAK8F,gBAAkB,EAAKZ,OAAOlF,cAAc,mBAHxB,E,0CAMtBa,EAAMF,GACT,yCACAnB,KAAKqG,cAAc/E,YAAcD,EACjCrB,KAAKsG,gBAAgBpF,IAAMC,EAC3BnB,KAAKsG,gBAAgBlF,IAAMC,O,oBAXFkF,G,8kCCoC7B,Q,kpBAnCE,cAGG,MAFDd,EAEC,EAFDA,cACAe,EACC,EADDA,iBACC,O,4FAAA,UACD,cAAMf,IACDgB,kBAAoBD,EACzB,EAAKE,eAAiB,EAAKhB,OAAOlC,iBAAiB,sBACnD,EAAKmD,iBAAmB,EAAKjB,OAAOlF,cAAc,qBAClD,EAAKoG,iBAAmB,EAAKlB,OAAOlF,cAAc,sBALjD,E,uDASD,IAAMqG,EAAa,GAInB,OAHA7G,KAAK8C,WAAaQ,MAAMC,KAAKvD,KAAK0G,gBAClC1G,KAAK8C,WAAWc,SAAQ,SAAAkD,GAAK,OAAID,EAAWC,EAAMzF,MAAQyF,EAAMC,SAEzDF,I,0CAGW,WAClB7G,KAAK0F,OAAOvD,iBAAiB,UAAU,SAAC2B,GACtCA,EAAMC,iBACN,EAAK0C,kBAAkB,EAAKO,sBAG9BhH,KAAK4G,iBAAiBK,QACtB,wD,8BAIA,0CACAjH,KAAK4G,iBAAiBK,a,oBAhCEV,G,8kCCyB5B,Q,kpBAxBE,cAGG,MAFDd,EAEC,EAFDA,cACAe,EACC,EADDA,iBACC,O,4FAAA,UACD,cAAMf,IACDgB,kBAAoBD,EACzB,EAAKI,iBAAmB,EAAKlB,OAAOlF,cAAc,sBAHjD,E,yDAMiB,WAClBR,KAAK0F,OAAOvD,iBAAiB,UAAU,SAAC2B,GAEtCA,EAAMC,iBACN,EAAK0C,kBAAkB,EAAKS,mBAE9B,wD,2BAGGC,GACHnH,KAAKkH,eAAiBC,EACtB,8C,oBArB2BZ,G,0KC+JlBa,EAAM,I,WAhKjB,WAAYC,I,4FAAO,SACjBrH,KAAKsH,QAAUD,EAAME,OACrBvH,KAAKwH,MAAQH,EAAMI,KACnBzH,KAAK0H,QAAUL,EAAMM,OACrB3H,KAAK4H,MAAL,UAAgB5H,KAAKsH,SAArB,OAA+BtH,KAAK0H,S,+DAIpC,OAAOG,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,UAAwB,CAChCE,OAAQ,MACRC,QAAS,CACPC,cAAehI,KAAKwH,SAGvBS,MAAK,SAACtG,GACL,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,c,oCAKzC,OAAOT,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,aAA2B,CACnCE,OAAQ,MACRC,QAAS,CACPC,cAAehI,KAAKwH,MACpB,eAAgB,sBAGnBS,MAAK,SAAAtG,GACJ,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,c,mCAI9BC,GACX,OAAOV,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,aAA2B,CACnCE,OAAQ,QACRC,QAAS,CACPC,cAAehI,KAAKwH,MACpB,eAAgB,oBAElBgB,KAAMC,KAAKC,UAAU,CACnBrH,KAAMkH,EAAKlH,KACXuD,MAAO2D,EAAKI,gBAGfV,MAAK,SAAAtG,GACJ,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,c,iCAIhCC,GACT,OAAOV,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,UAAwB,CAChCE,OAAQ,OACRC,QAAS,CACPC,cAAehI,KAAKwH,MACpB,eAAgB,oBAElBgB,KAAMC,KAAKC,UAAU,CACnBrH,KAAMkH,EAAKlH,KACXF,KAAMoH,EAAKpH,SAGd8G,MAAK,SAACtG,GACL,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,c,iCAIhCM,GACT,OAAOf,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,kBAAwBgB,GAAU,CAC1Cd,OAAQ,SACRC,QAAS,CACPC,cAAehI,KAAKwH,MACpB,eAAgB,sBAGnBS,MAAK,SAACtG,GACL,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,c,+BAIlCM,GACP,OAAOf,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,wBAA8BgB,GAAU,CAChDd,OAAQ,MACRC,QAAS,CACPC,cAAehI,KAAKwH,MACpB,eAAgB,sBAGnBS,MAAK,SAACtG,GACL,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,c,iCAIhCM,GACT,OAAOf,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,wBAA8BgB,GAAU,CAChDd,OAAQ,SACRC,QAAS,CACPC,cAAehI,KAAKwH,MACpB,eAAgB,sBAGnBS,MAAK,SAACtG,GACL,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,c,iCAIhCC,GACT,OAAOV,MAAM,GAAD,OAAI7H,KAAK4H,MAAT,oBAAkC,CAC1CE,OAAQ,QACRC,QAAS,CACPC,cAAehI,KAAKwH,MACpB,eAAgB,oBAElBgB,KAAMC,KAAKC,UAAU,CACnB7D,OAAQ0D,EAAK1D,WAGhBoD,MAAK,SAACtG,GACL,OAAIA,EAAIuG,GACCvG,EAAIwG,OAGNC,QAAQC,OAAR,kBAA0B1G,EAAI2G,iB,sBAW1B,CANL,CACZ,OAAU,qCACV,KAAQ,uCACR,OAAU,cCpICO,EAAuB,CAClCC,aAAc,qBACdrF,cAAe,qBACfC,qBAAsB,oBACtBf,gBAAiB,+BACjBD,cAAe,gBACfG,WAAY,wBAODkG,GAJe3D,SAAS5E,cAAc,uBAC1B4E,SAAS5E,cAAc,oBACxB4E,SAAS5E,cAAc,qBAER4E,SAAS5E,cAAc,4BACjDwI,EAAiC5D,SAAS5E,cAAc,kCAKxDyI,GAHgB7D,SAAS5E,cAAc,4BACvB4E,SAAS5E,cAAc,2BAEZ4E,SAAS5E,cAAc,uBAClD0I,EAAuB9D,SAAS5E,cAAc,qBAE9C2I,EAAqB/D,SAAS5E,cAAc,mBAC5C4I,EAA4BhE,SAAS5E,cAAc,yBACnD6I,EAAuBjE,SAAS5E,cAAc,oBAC9C8I,EAA8BlE,SAAS5E,cAAc,qBAGrDd,GADoB0F,SAAS5E,cAAc,aAC5B4E,SAAS5E,cAAc,iBAAiB+I,SAGvDC,EAAuB,sBACvBC,EAAoB,mBAEpBC,EAA4B,4B,0GC5BzC,IAAMC,EAAqB,IAAIC,EAAe,qBAExCC,EAAiB,SAACC,GACtBH,EAAmBI,KAAKD,EAAUzI,KAAMyI,EAAU3I,OAG9C6I,EAAqB,SAAUF,EAAWlK,EAAUF,GACxD,IAAMuK,EAAO,IAAIC,EAAK,CACpBvK,SAAUmK,EACVlK,SAAUA,EACVC,gBAAiBgK,EACjB/J,gBAAiB,SAAC8I,GAEZqB,EAAKnI,UACPsF,aAAewB,GACZX,MAAK,SAACtG,GACLsI,EAAKjJ,gBAAgBW,MAEtBwI,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAGlBhD,WAAawB,GACVX,MAAK,SAACtG,GACLsI,EAAKjJ,gBAAgBW,MAEtBwI,OAAM,SAACC,GACNC,QAAQC,MAAMF,OAItBrK,kBAAmB,SAACwK,EAAa3B,GAC/B4B,GAA2BT,KAAK,CAC9BQ,cACA3B,aAGHlJ,GAEH,OAAOuK,GAGHQ,EAAsB,IAAIC,EAAQ,CACpCnC,KAAM,GACNvD,SAAU,SAAC8E,EAAWlK,GACpB,IAEM2K,EAFOP,EAAmBF,EAAWlK,EAAUF,GAE5BiL,oBACzBF,EAAoBG,WAAWL,KDxBI,aC8BnCM,EAAW,CAACzD,EAAI0D,kBAAmB1D,EAAI2D,eA0B7C,SAASC,EAAcC,EAAOC,GACE9F,SAAS5E,cAAcyK,GAAOzK,cDpDvB,qBCqDdc,YAAc4J,EAAY,gBAAkB,YA1BrE9C,QAAQ+C,IAAIN,GACV5C,MAAK,YAAwB,I,IAAA,G,EAAA,E,4CAAA,I,owBAAtBmD,EAAsB,KAAbC,EAAa,KAC3BC,EAAgBC,YAAYF,EAAQ3J,IAAK2J,EAAQhK,KAAMgK,EAAQzG,MAAOyG,EAAQxG,QAC9E4F,EAAoBe,iBAAiBJ,GACrCX,EAAoBgB,SAASJ,GAG7BpC,mBAA0C,SAAS,WACjDyC,GAAyB3B,UAG3Bb,mBAAsC,SAAS,WAC7CyC,GAAqB5B,UAGzBT,mBAA6C,SAAS,WAClDsC,GAA0B7B,OAC1B6B,GAA0BhF,iBAAiB/B,OAAOkC,MAAQuE,EAAgBP,cAAclG,aAG5FsF,OAAM,SAACC,GACPC,QAAQC,MAAMF,MAQhB,IAAMkB,EAAkB,IAAIO,EAAS,CACnC5H,qBAAsB8E,EACtB7E,4BAA6B8E,EAC7B7E,gBAAiBgF,EACjB/E,uBAAwBgF,EACxB/E,kBAAmBgF,IAGfmB,GAA6B,IAAIsB,EAAiB,CACtDrG,cDnEiC,qBCoEjCe,iBAAkB,YAGZ,IAFJ+D,EAEI,EAFJA,YACA3B,EACI,EADJA,OAECxB,aAAewB,GACbX,MAAK,WACJsC,EAAYtI,SACZuI,GAA2BxE,WAE5BmE,OAAM,SAACC,GACNC,QAAQC,MAAMF,SAKhBwB,GAA4B,IAAIG,EAAc,CACnDtG,cAAeiE,EACflD,iBAAkB,SAACwF,GAClBhB,EAActB,GAA2B,GACzCtC,aAAe4E,GACb/D,MAAK,SAAAM,GACL+C,EAAgBC,YAAYhD,EAAK7G,IAAK6G,EAAKlH,KAAMkH,EAAK3D,MAAO2D,EAAK1D,QAC9D+G,GAA0B5F,WAE9BmE,OAAM,SAACC,GACPC,QAAQC,MAAMF,MAEX6B,SAAQ,WACPjB,EAActB,GAA2B,SAK3CgC,GAA2B,IAAIK,EAAc,CACjDtG,cAAe+D,EACfhD,iBAAkB,SAACwF,GACjBhB,EAAcxB,GAAsB,GACpCpC,eAAiB4E,GAChB/D,MAAK,SAAAM,GACJ+C,EAAgBC,YAAYhD,EAAK7G,IAAK6G,EAAKlH,KAAMkH,EAAK3D,MAAO2D,EAAK1D,QAClE6G,GAAyB1F,QACzBgF,EAAcxB,GAAsB,MAErCW,OAAM,SAACC,GACNC,QAAQC,MAAMF,SAKduB,GAAuB,IAAII,EAAc,CAC7CtG,cAAegE,EACfjD,iBAAkB,SAACsD,GACjBkB,EAAcvB,GAAmB,GACnCrC,aAAe0C,GACb7B,MAAK,SAAAM,GACL,IAAM2D,EAAUlC,EAAmBzB,EAAM+C,EAAgBP,cAAerL,GACpE+K,EAAoB0B,YAAYD,EAAQvB,qBAC5CgB,GAAqB3F,WAErBmE,OAAM,SAACC,GACPC,QAAQ+B,IAAIhC,MAET6B,SAAQ,WACPjB,EAAcvB,GAAmB,SAKnC4C,GAA2B,IAAIC,EAAczD,EAAsB6C,GAAyB9E,kBAC5F2F,GAAuB,IAAID,EAAczD,EAAsB8C,GAAqB/E,kBACpF4F,GAA0B,IAAIF,EAAczD,EAAsB+C,GAA0BhF,kBAElGyF,GAAyBI,mBACzBF,GAAqBE,mBACrBD,GAAwBC,mBAExB9C,EAAmB+C,oBACnBhB,GAAyBgB,oBACzBf,GAAqBe,oBACrBd,GAA0Bc,oBAC1BlC,GAA2BkC,qB","file":"main.js","sourcesContent":["class Card {\r\n  constructor({\r\n    cardData,\r\n    userData,\r\n    handleCardClick,\r\n    handleLikeClick,\r\n    handleDeleteClick\r\n  }, cardTemplate) {\r\n    this._cardTemplateNode = cardTemplate;\r\n    this._data = cardData;\r\n    this._userData = userData;\r\n    this._handleCardClick = handleCardClick;\r\n    this._handleLikeClick = handleLikeClick;\r\n    this._handleDeleteClick = handleDeleteClick;\r\n  }\r\n\r\n  _getCardTemplate() {\r\n    const cardElement = this._cardTemplateNode\r\n      .cloneNode(true)\r\n      .querySelector('.element');\r\n\r\n    return cardElement;\r\n  }\r\n\r\n  createCardElement() {\r\n    this._element = this._getCardTemplate();\r\n    this._cardElementImage = this._element.querySelector('.element__image');\r\n    this._cardDeleteIcon = this._element.querySelector('.element__trash-icon');\r\n    this._cardLikeIcon = this._element.querySelector('.element__like-icon');\r\n    this._likeCounter = this._element.querySelector('.element__like-count');\r\n\r\n    this._setDeleteIcon();\r\n    this.updateLikeCount(this._data);\r\n    this._setEventListeners();\r\n\r\n    this._cardElementImage.src = this._data.link;\r\n    this._cardElementImage.alt = this._data.name;\r\n    this._element.querySelector('.element__title').textContent = this._data.name;\r\n\r\n    return this._element;\r\n  }\r\n\r\n  isLiked() {\r\n    // debugger;\r\n    return this._data.likes.some(like => like._id === this._userData._id);\r\n  }\r\n  \r\n  updateLikeCount(res) {\r\n    // debugger;\r\n    this._data = res;\r\n\t\tthis._likeCounter.textContent = res.likes.length;\r\n\t\t// if (!this.isLiked()) {\r\n      this._toggleLikeIcon();\r\n    // }\r\n  }\r\n\r\n  _toggleLikeIcon() {\r\n    // this._cardLikeIcon.classList.toggle('element__like-icon_active');\r\n    // debugger;\r\n    if (this.isLiked()) {\r\n      this._cardLikeIcon.classList.add('element__like-icon_active'); \r\n    } else {\r\n      this._cardLikeIcon.classList.remove('element__like-icon_active');\r\n    }\r\n  }\r\n\r\n  _deleteCard() {\r\n    this._element.remove();\r\n    this._element = null;\r\n  }\r\n\r\n  _setDeleteIcon() {\r\n    if (this._userData._id !== this._data.owner._id) {\r\n      this._cardDeleteIcon.remove();\r\n    }\r\n  }\r\n\r\n  _setEventListeners() {\r\n    this._cardLikeIcon.addEventListener('click', () => {\r\n      this._handleLikeClick(this._data._id)\r\n    });\r\n    this._cardDeleteIcon.addEventListener('click', () => {\r\n      this._handleDeleteClick(this._element, this._data._id)\r\n    });\r\n    this._cardElementImage.addEventListener('click', () => {\r\n      this._handleCardClick(this._data)\r\n    });\r\n  }\r\n}\r\n\r\nexport default Card;","class FormValidator {\r\n  constructor(config, formElement) {\r\n    this._formElement = formElement;\r\n    this._config = config;\r\n  }\r\n  //приватные методы класса \r\n  _showInputError(inputElement) {\r\n    this._errorElement = this._formElement.querySelector(`${this._config.errorSelector}_${inputElement.name}`);\r\n    inputElement.classList.add(this._config.inputErrorClass);\r\n    this._errorElement.textContent = inputElement.validationMessage;\r\n    this._errorElement.classList.add(this._config.errorClass);\r\n  }\r\n\r\n  _hideInputError(inputElement) {\r\n    this._errorElement = this._formElement.querySelector(`${this._config.errorSelector}_${inputElement.name}`);\r\n    inputElement.classList.remove(this._config.inputErrorClass);\r\n    this._errorElement.classList.remove(this._config.errorClass);\r\n    this._errorElement.textContent = '';\r\n  }\r\n\r\n  _hasInvalidInput() {\r\n    return this._inputList.some((inputElement) => {\r\n      return !inputElement.validity.valid;\r\n    });\r\n  }\r\n\r\n  _checkInputValidity(inputElement) {\r\n    if (!inputElement.validity.valid) {\r\n      this._showInputError(inputElement);\r\n    } else {\r\n      this._hideInputError(inputElement);\r\n    }\r\n  }\r\n\r\n  _toggleButtonState() {\r\n    this._buttonElement.disabled = this._hasInvalidInput();\r\n  }\r\n\r\n  _deactivateButton() {\r\n    this._buttonElement.classList.add('popup__input-btn_disabled');\r\n    this._buttonElement.disabled = true;\r\n  }\r\n\r\n  _setEventListeners() {\r\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._config.inputSelector));\r\n    this._buttonElement = this._formElement.querySelector(this._config.submitButtonSelector);\r\n\r\n    this._toggleButtonState();\r\n\r\n    this._inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        this._checkInputValidity(inputElement);\r\n        this._toggleButtonState();\r\n      });\r\n    });\r\n  }\r\n\r\n  enableValidation() {\r\n    this._formElement.addEventListener('submit', (event) => {\r\n      event.preventDefault();\r\n      this._deactivateButton();\r\n    });\r\n    this._setEventListeners();\r\n  };\r\n};\r\n\r\nexport default FormValidator;","class UserInfo {\r\n  constructor({\r\n    userNameInputElement,\r\n    userDescriptionInputElement,\r\n    userNameElement,\r\n    userDescriptionElement,\r\n    userAvatarElement,\r\n    id\r\n  }) {\r\n    this._userNameInputElement = userNameInputElement;\r\n    this._userDescriptionInputElement = userDescriptionInputElement;\r\n    this._userNameElement = userNameElement;\r\n    this._userDescriptionElement = userDescriptionElement;\r\n    this._userAvatarElement = userAvatarElement;\r\n    this._id = id;\r\n  }\r\n\r\n  getUserInfo() {\r\n    const userInformation = {\r\n      name: this._userNameInputElement.textContent,\r\n      about: this._userDescriptionInputElement.textContent,\r\n      avatar: this._userAvatarElement.src,\r\n      _id: this._id\r\n    };\r\n\r\n    return userInformation;\r\n  }\r\n\r\n  setUserInfo(id, name, about, avatar) {\r\n    this._userNameElement.textContent = name;\r\n    this._userDescriptionElement.textContent = about;\r\n    this._id = id;\r\n    this._userAvatarElement.src = avatar;\r\n  }\r\n};\r\n\r\nexport default UserInfo;","class Section {\r\n  constructor({\r\n    items,\r\n    renderer\r\n  }, containerSelector) {\r\n    this._renderedItems = items;\r\n    this._renderer = renderer;\r\n    this._containerElement = document.querySelector(containerSelector);\r\n  }\r\n\r\n  addItems(userData) {\r\n    this._renderedItems.forEach(item => {\r\n      this._renderer(item, userData);\r\n    });\r\n  }\r\n\r\n  setResolvedItems(items) {\r\n    this._renderedItems = items;\r\n  }\r\n\r\n  appendItem(element) {\r\n    this._containerElement.append(element);\r\n  }\r\n\r\n  prependItem(element) {\r\n    this._containerElement.prepend(element);\r\n  }\r\n};\r\nexport default Section;","class Popup {\r\n  constructor(popupSelector) {\r\n    this._popup = document.querySelector(popupSelector);\r\n    this._handleEscClose = this._handleEscClose.bind(this);\r\n    this._closePopupOnOverlay = this._closePopupOnOverlay.bind(this);\r\n  }\r\n\r\n  open() {\r\n    this._popup.classList.add('popup_is-opened');\r\n    document.addEventListener('keydown', this._handleEscClose);\r\n  }\r\n\r\n  close() {\r\n    this._popup.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', this._handleEscClose);\r\n  }\r\n\r\n  _handleEscClose(event) {\r\n    if (event.key === \"Escape\") {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  _closePopupOnOverlay(event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  setEventListeners() {\r\n    this.handleCloseButtonClick();\r\n    this.handleOverlayClose();\r\n  }\r\n\r\n  handleCloseButtonClick() {\r\n    const closeButton = this._popup.querySelector('.popup__close');\r\n    closeButton.addEventListener('click', () => this.close());\r\n  }\r\n\r\n  handleOverlayClose() {\r\n    this._popup.addEventListener('click', this._closePopupOnOverlay);\r\n  }\r\n};\r\n\r\nexport default Popup;","import Popup from './Popup.js';\r\n\r\nclass PopupWithImage extends Popup {\r\n  constructor(popupSelector) {\r\n    super(popupSelector);\r\n    this._imgTitleLoad = this._popup.querySelector('.popup__title_type-image');\r\n    this._imgPictureLoad = this._popup.querySelector('.popup__fullpic');\r\n  }\r\n\r\n  open(name, link) {\r\n    super.open();\r\n    this._imgTitleLoad.textContent = name;\r\n    this._imgPictureLoad.src = link;\r\n    this._imgPictureLoad.alt = name;\r\n  }\r\n\r\n};\r\n\r\nexport default PopupWithImage;","import Popup from './Popup.js';\r\n\r\nclass PopupWithForm extends Popup {\r\n  constructor({\r\n    popupSelector,\r\n    handleFormSubmit\r\n  }) {\r\n    super(popupSelector);\r\n    this._handleFormSubmit = handleFormSubmit;\r\n    this._inputElements = this._popup.querySelectorAll('.popup__input-text');\r\n    this._popupFormButton = this._popup.querySelector('.popup__input-btn');\r\n    this.popupFormElement = this._popup.querySelector('.popup__input-form');\r\n  }\r\n\r\n  _getInputValues() {\r\n    const formValues = {};\r\n    this._inputList = Array.from(this._inputElements);\r\n    this._inputList.forEach(input => formValues[input.name] = input.value);\r\n\r\n    return formValues;\r\n  }\r\n\r\n  setEventListeners() {\r\n    this._popup.addEventListener('submit', (event) => {\r\n      event.preventDefault();\r\n      this._handleFormSubmit(this._getInputValues());\r\n    })\r\n\r\n    this.popupFormElement.reset();\r\n    super.setEventListeners();\r\n  }\r\n\r\n  close() {\r\n    super.close();\r\n    this.popupFormElement.reset();\r\n  }\r\n};\r\n\r\nexport default PopupWithForm;","import Popup from './Popup.js'\r\n\r\nclass PopupWithConfirm extends Popup {\r\n  constructor({\r\n    popupSelector,\r\n    handleFormSubmit\r\n  }) {\r\n    super(popupSelector);\r\n    this._handleFormSubmit = handleFormSubmit;\r\n    this.popupFormElement = this._popup.querySelector('.popup__input-form');\r\n  }\r\n\r\n  setEventListeners() {\r\n    this._popup.addEventListener('submit', (event) => {\r\n      debugger;\r\n      event.preventDefault();\r\n      this._handleFormSubmit(this._deleteElement);\r\n    })\r\n    super.setEventListeners();\r\n  }\r\n\r\n  open(elementWithId) {\r\n    this._deleteElement = elementWithId;\r\n    super.open();\r\n  }\r\n}\r\n\r\nexport default PopupWithConfirm;","class Api {\r\n  constructor(login) {\r\n    this._server = login.server;\r\n    this._auth = login.auth;\r\n    this._cohort = login.cohort;\r\n    this._path = `${this._server}${this._cohort}`;\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._path}/cards`, {\r\n        method: 'GET',\r\n        headers: {\r\n          authorization: this._auth\r\n        }\r\n      })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._path}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n          authorization: this._auth,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  sendUserInfo(data) {\r\n    return fetch(`${this._path}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          authorization: this._auth,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: data.name,\r\n          about: data.description\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  addNewCard(data) {\r\n    return fetch(`${this._path}/cards`, {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: this._auth,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: data.name,\r\n          link: data.link\r\n        })\r\n      })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._path}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: this._auth,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return fetch(`${this._path}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          authorization: this._auth,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  unlikeCard(cardId) {\r\n    return fetch(`${this._path}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: this._auth,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  editAvatar(data) {\r\n    return fetch(`${this._path}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          authorization: this._auth,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          avatar: data.avatar\r\n        })\r\n      })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n}\r\n\r\nconst login = {\r\n  \"server\": \"https://mesto.nomoreparties.co/v1/\",\r\n  \"auth\": \"ca5f4285-decb-4fbb-b094-52f199996ef3\",\r\n  \"cohort\": \"cohort-19\"\r\n}\r\n\r\nexport const api = new Api(login);","export const initialCards = [{\r\n    name: 'Архыз',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\r\n  },\r\n  {\r\n    name: 'Челябинская область',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\r\n  },\r\n  {\r\n    name: 'Иваново',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\r\n  },\r\n  {\r\n    name: 'Камчатка',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\r\n  },\r\n  {\r\n    name: 'Холмогорский район',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\r\n  },\r\n  {\r\n    name: 'Байкал',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\r\n  }\r\n];\r\n\r\nexport const initValidationConfig = {\r\n  formSelector: '.popup__input-form',\r\n  inputSelector: '.popup__input-text',\r\n  submitButtonSelector: '.popup__input-btn',\r\n  inputErrorClass: 'popup__input-text_type_error',\r\n  errorSelector: '.popup__error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\nexport const profilePopup = document.querySelector('.popup_type-profile');\r\nexport const cardPopup = document.querySelector('.popup_type-card');\r\nexport const imgPopup = document.querySelector('.popup_type-image');\r\n\r\nexport const profileNameInputElement = document.querySelector('.popup__input-text_name');\r\nexport const profileDescriptionInputElement = document.querySelector('.popup__input-text_description');\r\n\r\nexport const cardInputName = document.querySelector('.popup__input-text_title');\r\nexport const cardInputLink = document.querySelector('.popup__input-text_link');\r\n\r\nexport const profileEditButtonElement = document.querySelector('.profile__edit-btn');\r\nexport const cardAddButtonElement = document.querySelector('.profile__add-btn');\r\n\r\nexport const profileNameElement = document.querySelector('.profile__title');\r\nexport const profileDescriptionElement = document.querySelector('.profile__description');\r\nexport const profileAvatarElement = document.querySelector('.profile__avatar');\r\nexport const profileAvatarOverlayElement = document.querySelector('.profile__overlay');\r\n\r\nexport const elementsContainer = document.querySelector('.elements');\r\nexport const cardTemplate = document.querySelector('#cardTemplate').content;\r\n\r\nexport const elementsContainerSelector = '.elements';\r\nexport const profilePopupSelector = '.popup_type-profile';\r\nexport const cardPopupSelector = '.popup_type-card';\r\nexport const deletePopupSelector = '.popup_type-delete';\r\nexport const updateAvatarPopupSelector = '.popup_type-update-avatar';\r\nexport const popupFormButtonSelector = '.popup__input-btn';\r\n","import './index.css';\r\n\r\nimport Card from '../components/Card.js';\r\nimport FormValidator from '../components/FormValidator.js';\r\nimport UserInfo from '../components/UserInfo.js';\r\nimport Section from '../components/Section.js';\r\nimport PopupWithImage from '../components/PopupWithImage.js';\r\nimport PopupWithForm from '../components/PopupWithForm.js';\r\nimport PopupWithConfirm from '../components/PopupWithConfirm.js';\r\nimport {\r\n  api\r\n} from '../components/Api.js';\r\n\r\nimport {\r\n  initValidationConfig,\r\n  profileNameInputElement,\r\n  profileDescriptionInputElement,\r\n  profileEditButtonElement,\r\n  cardAddButtonElement,\r\n  profileNameElement,\r\n  profileDescriptionElement,\r\n  cardTemplate,\r\n  elementsContainerSelector,\r\n  profilePopupSelector,\r\n  cardPopupSelector,\r\n  deletePopupSelector,\r\n  popupFormButtonSelector,\r\n  profileAvatarElement,\r\n  profileAvatarOverlayElement,\r\n  updateAvatarPopupSelector\r\n} from '../utils/constants.js';\r\n\r\nconst cardPopupWithImage = new PopupWithImage('.popup_type-image');\r\n\r\nconst cardImageClick = (cardModel) => {\r\n  cardPopupWithImage.open(cardModel.name, cardModel.link);\r\n}\r\n\r\nconst createCardInstance = function (cardModel, userData, cardTemplate) {\r\n  const card = new Card({\r\n    cardData: cardModel,\r\n    userData: userData,\r\n    handleCardClick: cardImageClick,\r\n    handleLikeClick: (cardId) => {\r\n      // debugger;\r\n      if (card.isLiked()) {\r\n        api.unlikeCard(cardId)\r\n          .then((res) => {\r\n            card.updateLikeCount(res);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          })\r\n      } else {\r\n        api.likeCard(cardId)\r\n          .then((res) => {\r\n            card.updateLikeCount(res);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          })\r\n      }\r\n    },\r\n    handleDeleteClick: (cardElement, cardId) => {\r\n      deleteCardPopupWithConfirm.open({\r\n        cardElement,\r\n        cardId\r\n      });\r\n    },\r\n  }, cardTemplate);\r\n\r\n  return card;\r\n}\r\n\r\nconst initialCardsSection = new Section({\r\n    data: {},\r\n    renderer: (cardModel, userData) => {\r\n      const card = createCardInstance(cardModel, userData, cardTemplate);\r\n\r\n      const cardElement = card.createCardElement();\r\n      initialCardsSection.appendItem(cardElement);\r\n    },\r\n  },\r\n  elementsContainerSelector\r\n);\r\n\r\nconst promises = [api.getInitialCards(), api.getUserInfo()]\r\n\r\nPromise.all(promises)\r\n\t.then(([resCard, resUser]) => {\r\n    profileUserInfo.setUserInfo(resUser._id, resUser.name, resUser.about, resUser.avatar)\r\n    initialCardsSection.setResolvedItems(resCard);\r\n    initialCardsSection.addItems(resUser);\r\n    \r\n    //set click events: edit-avatar, edit-profile, add-newcard \r\n    profileEditButtonElement.addEventListener('click', () => {\r\n      editProfilePopupWithForm.open();\r\n    });\r\n    \r\n    cardAddButtonElement.addEventListener('click', () => {\r\n      addCardPopupWithForm.open();\r\n    });\r\n    \r\n\t\tprofileAvatarOverlayElement.addEventListener('click', () => {\r\n      updateAvatarPopupWithForm.open();\r\n      updateAvatarPopupWithForm.popupFormElement.avatar.value = profileUserInfo.getUserInfo().avatar;\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\tconsole.error(err);\r\n\t})\r\n\r\nfunction renderLoading(popup, isLoading) {\r\n\tconst popupFormButtonElement = document.querySelector(popup).querySelector(popupFormButtonSelector);\r\n  popupFormButtonElement.textContent = isLoading ? 'Сохранение...' : 'Сохранить';\r\n}\r\n\r\nconst profileUserInfo = new UserInfo({\r\n  userNameInputElement: profileNameInputElement,\r\n  userDescriptionInputElement: profileDescriptionInputElement,\r\n  userNameElement: profileNameElement,\r\n  userDescriptionElement: profileDescriptionElement,\r\n  userAvatarElement: profileAvatarElement\r\n});\r\n\r\nconst deleteCardPopupWithConfirm = new PopupWithConfirm({\r\n  popupSelector: deletePopupSelector,\r\n  handleFormSubmit: ({\r\n    cardElement,\r\n    cardId\r\n  }) => {\r\n     api.deleteCard(cardId)\r\n      .then(() => {\r\n        cardElement.remove();\r\n        deleteCardPopupWithConfirm.close();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n});\r\n\r\nconst updateAvatarPopupWithForm = new PopupWithForm({\r\n\tpopupSelector: updateAvatarPopupSelector,\r\n\thandleFormSubmit: (profileData) => {\r\n\t\trenderLoading(updateAvatarPopupSelector, true);\r\n\t\tapi.editAvatar(profileData)\r\n\t\t\t.then(data => {\r\n\t\t\t\tprofileUserInfo.setUserInfo(data._id, data.name, data.about, data.avatar);\r\n        updateAvatarPopupWithForm.close();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n      })\r\n      .finally(() => {\r\n        renderLoading(updateAvatarPopupSelector, false);\r\n      });\r\n\t}\r\n});\r\n\r\nconst editProfilePopupWithForm = new PopupWithForm({\r\n  popupSelector: profilePopupSelector,\r\n  handleFormSubmit: (profileData) => {\r\n    renderLoading(profilePopupSelector, true);\r\n    api.sendUserInfo(profileData)\r\n    .then(data => {\r\n      profileUserInfo.setUserInfo(data._id, data.name, data.about, data.avatar);\r\n      editProfilePopupWithForm.close();\r\n      renderLoading(profilePopupSelector, false);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n});\r\n \r\nconst addCardPopupWithForm = new PopupWithForm({\r\n  popupSelector: cardPopupSelector,\r\n  handleFormSubmit: (cardModel) => {\r\n    renderLoading(cardPopupSelector, true);\r\n\t\tapi.addNewCard(cardModel)\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst newCard = createCardInstance(data, profileUserInfo.getUserInfo(), cardTemplate);\r\n        initialCardsSection.prependItem(newCard.createCardElement());\r\n\t\t\t\taddCardPopupWithForm.close();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n      })\r\n      .finally(() => {\r\n        renderLoading(cardPopupSelector, false);\r\n      });\r\n  },\r\n});\r\n\r\nconst editProfileFormValidator = new FormValidator(initValidationConfig, editProfilePopupWithForm.popupFormElement);\r\nconst addCardFormValidator = new FormValidator(initValidationConfig, addCardPopupWithForm.popupFormElement);\r\nconst editAvatarFormValidator = new FormValidator(initValidationConfig, updateAvatarPopupWithForm.popupFormElement);\r\n\r\neditProfileFormValidator.enableValidation();\r\naddCardFormValidator.enableValidation();\r\neditAvatarFormValidator.enableValidation();\r\n\r\ncardPopupWithImage.setEventListeners();\r\neditProfilePopupWithForm.setEventListeners();\r\naddCardPopupWithForm.setEventListeners();\r\nupdateAvatarPopupWithForm.setEventListeners();\r\ndeleteCardPopupWithConfirm.setEventListeners();"],"sourceRoot":""}